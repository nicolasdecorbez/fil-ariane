---
version: "3"


services:
  apiv2:
    container_name: ardiane_api
    image: ardianethread/ardiane_api
    depends_on:
      - database
    environment:
      DATABASE_USER: "ardiane"
      DATABASE_PASSWORD: "password"
      DATABASE_DB: "ardiane"
      DATABASE_HOST: "database"
    labels:
      - traefik.http.routers.api.rule=Host(`api.ardiane.local`)
    restart: on-failure

  database:
    container_name: ardiane_database
    image: postgres:13.3
    environment:
      POSTGRES_USER: "ardiane"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "ardiane"
    restart: on-failure
    volumes:
      - "ardiane-data:/var/lib/postgresql/data"

  traefik:
    container_name: ardiane_proxy
    image: traefik:2.4.8
    labels:
      - traefik.http.routers.dashboard.rule=Host(`proxy.ardiane.local`)
      - traefik.http.routers.dashboard.service=api@internal
    ports:
      - "80:80"
      - "8080:8080"
    restart: on-failure
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.toml:/traefik.toml"


volumes:
  ardiane-data: {}
